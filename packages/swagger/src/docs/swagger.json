{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "Swagger GTMS"
  },
  "host": "master.geotags.pl",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "User login and registration service"
    },
    {
      "name": "Groups",
      "description": "Groups service"
    },
    {
      "name": "Notifications",
      "description": "Email and web push notifications service"
    },
    {
      "name": "Tags",
      "description": "Tags service"
    },
    {
      "name": "Files",
      "description": "Files service"
    },
    {
      "name": "Posts",
      "description": "Posts service"
    },
    {
      "name": "Comments",
      "description": "Comments service"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/auth/users/count": {
      "get": {
        "tags": ["Auth"],
        "summary": "Returns the current number of registered users",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "counter": {
                  "type": "number"
                }
              },
              "example": {
                "counter": 510
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "phone": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "languageCode": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Auth"],
        "summary": "Returns list of users",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login into an account",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/JWT"
            }
          },
          "401": {
            "description": "Invalid email/password"
          },
          "403": {
            "description": "Account is not active"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refreshes access token",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid"
          }
        }
      }
    },
    "/auth/activate-account/{code}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Actives user account",
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Activation code"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Activation code not found"
          }
        }
      }
    },
    "/auth/remind-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Generates remind password email",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email has been sent"
          },
          "400": {
            "description": "Address email is invalid"
          },
          "404": {
            "description": "Email not found in DB"
          }
        }
      }
    },
    "/auth/reset-passord": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resets user's password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Payload is invalid"
          },
          "404": {
            "description": "Code not found"
          }
        }
      }
    },
    "/auth/delete-account": {
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Sends delete user account email",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/auth/delete-account-confirm": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Sends delete user account email",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account has been deleted"
          },
          "400": {
            "description": "Code is invalid"
          },
          "401": {
            "description": "Code does not belong to the current user"
          },
          "404": {
            "description": "Code or account does not exist"
          }
        }
      }
    },
    "/auth/me/groups": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns groups that somehow belongs to the user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "admin": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                },
                "member": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                },
                "owner": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns info about current user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Successful operation"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      },
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns info about current user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "languageCode": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account has been updated"
          },
          "400": {
            "description": "Payload has errors"
          },
          "401": {
            "description": "JWT token in header is invalid"
          },
          "404": {
            "description": "JTW user does not exist in DB"
          }
        }
      }
    },
    "/me/favs/groups": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns info about current user fav groups",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/favs/users": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns info about current user fav users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/favs/posts": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Returns info about current user fav posts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/favs/groups/user/{id}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Returns info about user's fav groups",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "User's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/favs/users/user/{id}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Returns info about user's fav users",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "User's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/favs/posts/user/{id}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Returns info about user's fav posts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "User's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/favs/groups": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Creates a new fav group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "string"
                },
                "order": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      }
    },
    "/favs/groups/{id}": {
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Removes group from favs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "Group's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Group is not in favs"
          }
        }
      }
    },
    "/favs/posts": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Creates a new fav post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "string"
                },
                "order": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      }
    },
    "/favs/posts/{id}": {
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Removes post from favs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "Post's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Post is not in favs"
          }
        }
      }
    },
    "/favs/users": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Creates a new fav user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "order": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      }
    },
    "/favs/users/{id}": {
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Auth"],
        "summary": "Removes user from favs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "type": "string",
            "in": "path",
            "description": "User's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Post is not in favs"
          }
        }
      }
    },
    "/group": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Groups"],
        "summary": "Creates a new group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "visibility": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Groups"],
        "summary": "Returns public groups list, sorted by creation date",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/{slug}/join": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Groups"],
        "summary": "Allow user to join a group",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "User is already a group member"
          },
          "403": {
            "description": "User has no rights to join the group"
          },
          "404": {
            "description": "Group does not exist in db"
          }
        }
      }
    },
    "/group/{slug}/leave": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Groups"],
        "summary": "Allow user to leave a group",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "User is not group's member, can not leave"
          },
          "404": {
            "description": "Group does not exist in db"
          }
        }
      }
    },
    "/group/{slug}": {
      "get": {
        "tags": ["Groups"],
        "summary": "Returns group data",
        "description": "",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Group does not exist in db"
          }
        }
      },
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Groups"],
        "summary": "Updates group data",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "visibility": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "404": {
            "description": "Group does not exist or user has no permission to change it"
          }
        }
      }
    },
    "/group/{slug}/members": {
      "get": {
        "tags": ["Groups"],
        "summary": "Returns paginated list of group's members",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique group's slug"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/check-admin-rights": {
      "get": {
        "tags": ["Groups"],
        "summary": "Checks if user has right to modify group",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "User's id"
          },
          {
            "name": "group",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Group's id"
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User has admin rights"
          },
          "401": {
            "description": "User does not have admin rights"
          },
          "404": {
            "description": "Group does not exist in db"
          }
        }
      }
    },
    "/group/find-by-ids": {
      "post": {
        "tags": ["Groups"],
        "summary": "Returns groups by ids",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        }
      }
    },
    "/notifications/web-push": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Notifications"],
        "summary": "Creates a new web push subscription",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      }
    },
    "/web-push/{hash}": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Notifications"],
        "summary": "Checks if subscription exists",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription hash"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription exists",
            "schema": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string"
                },
                "userAgent": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Subscription does not exist"
          }
        }
      },
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Notifications"],
        "summary": "Deletes subscription",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription hash"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Subscription does not exist"
          }
        }
      }
    },
    "/tags/find": {
      "get": {
        "tags": ["Tags"],
        "summary": "Allow to find tags by name",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Term to search"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Query param is missing"
          }
        }
      }
    },
    "/tags/promoted": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Tags"],
        "summary": "Creates a new promoted tag for a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "tag": {
                  "type": "string"
                },
                "group": {
                  "type": "string"
                },
                "order": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PromotedTag"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "403": {
            "description": "User does not have group's admin rights"
          }
        }
      }
    },
    "/tags/promoted/group/{id}": {
      "put": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Tags"],
        "summary": "Bulk update group's promoted tags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group's id"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "op": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "tag": {
                        "type": "string"
                      },
                      "group": {
                        "type": "string"
                      },
                      "order": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "value": {
                    "$ref": "#/definitions/PromotedTag"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Tags"],
        "summary": "Returns promoted tags for a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotedTag"
              }
            }
          }
        }
      }
    },
    "/tags/promoted/{id}": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Tags"],
        "summary": "Updates promoted tag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Tag's id"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "descripiotn": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PromotedTag"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "403": {
            "description": "User does not have rights to update record"
          }
        }
      },
      "delete": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Tags"],
        "summary": "Deletes promoted tag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Tag's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "User does not have rights to delete record"
          },
          "404": {
            "description": "Group tag does not exist"
          }
        }
      }
    },
    "/files/groups/logo": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Files"],
        "summary": "Uploads group's logo",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "relatedRecord",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/files/groups/bg": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Files"],
        "summary": "Uploads group's background",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "relatedRecord",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/files/avatar": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Files"],
        "summary": "Uploads user's avatar",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "relatedRecord",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/files/gallery": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Files"],
        "summary": "Uploads user's gallery image",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "relatedRecord",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/files/tags/promoted": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Files"],
        "summary": "Uploads promoted tag's logo",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "relatedRecord",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid payload"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Posts"],
        "summary": "Creates a new post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "403": {
            "description": "User has no rights to create a post in provided group"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Returns a post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Post's id"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "descripiotn": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post does not exist"
          }
        }
      },
      "post": {
        "tags": ["Posts"],
        "security": [
          {
            "user_auth": []
          }
        ],
        "summary": "Updates a post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Post's id"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "403": {
            "description": "Edition timeout passed"
          },
          "404": {
            "description": "Post does not exist"
          }
        }
      }
    },
    "/posts/group/{id}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Returns group's posts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Group's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/user/{id}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Returns users's posts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "User's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/my": {
      "get": {
        "tags": ["Posts"],
        "security": [
          {
            "user_auth": []
          }
        ],
        "summary": "Returns current user's posts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/find-by-ids": {
      "post": {
        "tags": ["Posts"],
        "summary": "Returns posts by ids",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Comments"],
        "summary": "Creates a comment to a post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "string"
                },
                "parent": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "post": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Comments"],
        "summary": "Updates a comment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Comment's id"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Validation errors",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValidationError"
              }
            }
          },
          "403": {
            "description": "Edition timeout passed"
          }
        }
      }
    },
    "/comments/{id}/nested": {
      "get": {
        "tags": ["Comments"],
        "summary": "Returns subComments related to comment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Comment's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Comment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/my": {
      "get": {
        "security": [
          {
            "user_auth": []
          }
        ],
        "tags": ["Comments"],
        "summary": "Returns subComments related to comment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Comment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/post/{id}": {
      "get": {
        "tags": ["Comments"],
        "summary": "Returns comments related to post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Post's id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records limit (no more than 50)"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Returned records offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "limit": {
                  "type": "number"
                },
                "offset": {
                  "type": "number"
                },
                "docs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Comment"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "format": "phone-number"
        },
        "countryCode": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "avatar": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "files": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PromotedTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "order": {
          "type": "number"
        },
        "logo": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "files": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string"
        },
        "commentsCounter": {
          "type": "number"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "lastSubComments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "text": {
                "type": "string"
              }
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string"
        },
        "commentsCounter": {
          "type": "number"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "JWT": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "ValidationErrorProperty": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ValidationErrorProperty"
        },
        "kind": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "user_auth": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token"
    }
  }
}
